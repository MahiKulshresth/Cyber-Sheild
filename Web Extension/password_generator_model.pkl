# Create a function to collect site requirements from the user
def collect_site_requirements():
    # Create a Tkinter window
    window = tk.Tk()

    # Set the window title
    window.title('Collect Site Requirements')

    # Create the minimum password length label and entry widgets
    min_length_label = tk.Label(window, text='Minimum Password Length:')
    min_length_entry = tk.Entry(window)

    # Create the maximum password length label and entry widgets
    max_length_label = tk.Label(window, text='Maximum Password Length:')
    max_length_entry = tk.Entry(window)

    # Create the require uppercase letter checkbox widget
    require_uppercase_checkbox = tk.Checkbutton(window, text='Require Uppercase Letter')

    # Create the require lowercase letter checkbox widget
    require_lowercase_checkbox = tk.Checkbutton(window, text='Require Lowercase Letter')

    # Create the require digit checkbox widget
    require_digit_checkbox = tk.Checkbutton(window, text='Require Digit')

    # Create the require special character checkbox widget
    require_special_checkbox = tk.Checkbutton(window, text='Require Special Character')

    # Pack the widgets into the window
    min_length_label.pack()
    min_length_entry.pack()
    max_length_label.pack()
    max_length_entry.pack()
    require_uppercase_checkbox.pack()
    require_lowercase_checkbox.pack()
    require_digit_checkbox.pack()
    require_special_checkbox.pack()

    # Define a function to generate the password when the user clicks the "Generate Password" button
    def generate_password_button_clicked():
        # Get the site requirements from the user input
        min_length = int(min_length_entry.get())
        max_length = int(max_length_entry.get())
        require_uppercase = require_uppercase_checkbox.get()
        require_lowercase = require_lowercase_checkbox.get()
        require_digit = require_digit_checkbox.get()
        require_special = require_special_checkbox.get()

        # Create a dictionary of site requirements
        site_requirements = {
            'min_length': min_length,
            'max_length': max_length,
            'require_uppercase': require_uppercase,
            'require_lowercase': require_lowercase,
            'require_digit': require_digit,
            'require_special': require_special
        }

        # Generate the password based on the site requirements
        password = generate_password(site_requirements)

        # Display the generated password to the user
        password_label = tk.Label(window, text=f'Generated Password: {password}')
        password_label.pack()

    # Create a "Generate Password" button
    generate_password_button = tk.Button(window, text='Generate Password', command=generate_password_button_clicked)

    # Pack the button into the window
    generate_password_button.pack()

    # Run the Tkinter event loop
    window.mainloop()